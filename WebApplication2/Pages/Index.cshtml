@page
@model WebApplication2.Pages.IndexModel
@{
    ViewData["Title"] = "Link Comparison";
    string ConvertToBase64(byte[] array)
    {
        return Convert.ToBase64String(array);
    }
}

<!-- Styles for the page -->
<style>
   
    .diff-added {
        background-color: #e6ffe6;
    }

    .diff-removed {
        background-color: #ffe6e6;
    }

    .link-broken {
        color: red;
    }

    .link-ok {
        color: green;
    }
    /* DataTable Styles */
    #linkStatusTable1, #linkStatusTable2 {
        border: 1px solid #d4d4d4;
        background-color: #ffffff;
        width: 100%;
        margin-bottom: 2em;
    }

        #linkStatusTable1 thead, #linkStatusTable2 thead {
            background-color: #3a3a3a;
            color: white;
        }

        #linkStatusTable1 tbody tr:hover, #linkStatusTable2 tbody tr:hover {
            background-color: #e0e0e0; /* light gray for hover */
        }

        #linkStatusTable1 tbody tr:nth-child(odd), #linkStatusTable2 tbody tr:nth-child(odd) {
            background-color: #fafafa; /* lighter gray for alternating row colors */
        }

    /* Pagination Styles - Simplified */
    .dataTables_wrapper .dataTables_paginate {
        text-align: right;
        padding: 10px 0;
    }

        .dataTables_wrapper .dataTables_paginate .paginate_button {

            margin-left: 2px;
            border-radius: 3px;
            border: none;
            background-color: #e6e6e6;
            color: black;
        }

            .dataTables_wrapper .dataTables_paginate .paginate_button.previous,
            .dataTables_wrapper .dataTables_paginate .paginate_button.next {
                font-weight: bold;
            }

    /* Images Section */
    .images-section {
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
    }

    .images-section img {
            margin: 10px;
            border: 1px solid #ddd;
            padding: 5px;
            max-width: 150px;
            box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);
            transition: transform 0.2s;
        }

    .images-section img:hover {
                transform: scale(1.1);
            }
    .image-container {
        display: flex;
        flex-wrap: nowrap;
        gap: 5px;
    }

        .image-container img {
            max-width: 200px;
        }


    /* Metrics Section */
    .metrics-header {
        color: #4A90E2; 
        margin-top: 40px;
    }

    .metrics-table {
        width: 100%;
        border-collapse: collapse;
        margin-top: 20px;
    }

        .metrics-table th, .metrics-table td {
            border: 1px solid #e7e7e7;
            padding: 10px 15px;
            text-align: left;
        }

        .metrics-table th {
            background-color: #f5f5f5;
            font-weight: bold;
        }

        .metrics-table tbody tr:hover {
            background-color: #e6ffe6; /* Light green for hover */
        }

    .metrics-header {
        font-size: 1.5em;
        margin-top: 40px;
        border-bottom: 2px solid #e0e0e0;
        display: inline-block;
        padding-bottom: 5px;
    }
    .download-report {
        display: block;
        background-color: #007bff;
        color: white;
        padding: 10px 20px;
        text-align: center;
        border: none;
        cursor: pointer;
        margin-top: 20px;
    }
</style>

<div class="text-inner-banner-one pos-r ">
    <div class="shape-wrapper">
        <svg class="img-shape shape-one">
            <path fill-rule="evenodd" fill="rgb(255, 223, 204)"
                  d="M6.000,12.000 C9.314,12.000 12.000,9.314 12.000,6.000 C12.000,2.686 9.314,-0.000 6.000,-0.000 C2.686,-0.000 -0.000,2.686 -0.000,6.000 C-0.000,9.314 2.686,12.000 6.000,12.000 Z" />
        </svg>
        <svg class="img-shape shape-two">
            <path fill-rule="evenodd" fill="rgb(182, 255, 234)"
                  d="M6.000,12.000 C9.314,12.000 12.000,9.314 12.000,6.000 C12.000,2.686 9.314,-0.000 6.000,-0.000 C2.686,-0.000 -0.000,2.686 -0.000,6.000 C-0.000,9.314 2.686,12.000 6.000,12.000 Z" />
        </svg>
        <svg class="img-shape shape-three">
            <path fill-rule="evenodd" fill="rgb(181, 198, 255)"
                  d="M12.000,24.000 C18.627,24.000 24.000,18.627 24.000,12.000 C24.000,5.372 18.627,-0.000 12.000,-0.000 C5.372,-0.000 -0.000,5.372 -0.000,12.000 C-0.000,18.627 5.372,24.000 12.000,24.000 Z" />
        </svg>
        <svg class="img-shape shape-four">
            <path fill-rule="evenodd" fill="rgb(255, 156, 161)"
                  d="M7.500,15.000 C11.642,15.000 15.000,11.642 15.000,7.500 C15.000,3.358 11.642,-0.000 7.500,-0.000 C3.358,-0.000 -0.000,3.358 -0.000,7.500 C-0.000,11.642 3.358,15.000 7.500,15.000 Z" />
        </svg>
        <svg class="img-shape shape-five">
            <path fill-rule="evenodd" fill="rgb(178, 236, 255)"
                  d="M12.500,25.000 C19.403,25.000 25.000,19.403 25.000,12.500 C25.000,5.596 19.403,-0.000 12.500,-0.000 C5.596,-0.000 -0.000,5.596 -0.000,12.500 C-0.000,19.403 5.596,25.000 12.500,25.000 Z" />
        </svg>
    </div> <!-- /.shape-wrapper -->
    <div class="container">
        <p>UI/UX toolkit</p>
        <h2 class="pt-12">UnSecured Web Page Compator</h2>
    </div>
</div> <!-- /.text-inner-banner-one -->

<h4>Enter Links for Comparison</h4>
<!-- Input section for URLs -->
<div class="contact-form mt-120 md-mt-60">
    <form class="form theme-form-style-two"  method="get">
        <div class="messages"></div>
            <div class="controls">
                <div class="form-group">
                <input id="form_message" type="text" name="link1" value="@Model.Link1" placeholder="Source URL*" required="required" data-error="Source URL is required.">
                    <div class="help-block with-errors"></div>
                </div>

                <div class="form-group">
                <input id="form_message" type="text" name="link2" value="@Model.Link2" placeholder="Comparison URL*" required="required" data-error="URL to be compared is required.">
                    <div class="help-block with-errors"></div>
                </div>
    </div>

    <button class="theme-btn solid-button-one mt-35" type="submit">Compare</button>
</form>
</div>

<form method="get">
    <label>Link 1: <input type="text" name="link1" value="@Model.Link1" /></label>
    <label>Link 2: <input type="text" name="link2" value="@Model.Link2" /></label>
    <button type="submit">Compare</button>
</form>

<h2 class="metrics-header">Website Performance Metrics</h2>
    <table class="metrics-table">
        <thead>
            <tr>
                <th>Metric</th>
                <th>Link 1 (@Model.Link1)</th>
                <th>Link 2 (@Model.Link2)</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var metric in Model.PerformanceMetrics1.Keys)
            {
                <tr>
                <td>@metric</td>
                <td>@(metric == "TotalLoadTimeS" ? Model.PerformanceMetrics1[metric]?.ToString("N2") + " s" : Model.PerformanceMetrics1[metric]?.ToString("N2") + " ms")</td>
                <td>@(metric == "TotalLoadTimeS" ? Model.PerformanceMetrics2[metric]?.ToString("N2") + " s" : Model.PerformanceMetrics2[metric]?.ToString("N2") + " ms")</td>
            </tr>
            }

            <tr>
                <td>Mobile Responsive</td>
                <td>@(Model.IsMobileResponsive1 ? "Yes" : "No")</td>
                <td>@(Model.IsMobileResponsive2 ? "Yes" : "No")</td>
            </tr>
            <tr>
                <td>External Scripts</td>
                <td>@Model.ExternalScriptsCount1</td>
                <td>@Model.ExternalScriptsCount2</td>
            </tr>
            <tr>
                <td>External Stylesheets</td>
                <td>@Model.ExternalStylesheetsCount1</td>
                <td>@Model.ExternalStylesheetsCount2</td>
            </tr>
        </tbody>
    </table>

<!-- Tables to display link statuses -->
<h2>Link Statuses</h2>
<table id="linkStatusTable1" class="table table-bordered table-striped">
    <thead>
        <tr>
            <th colspan="3">Links from @Model.Link1</th>
        </tr>
        <tr>
            <th>URL</th>
            <th>Status</th>
            <th>Code</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var link in Model.LinksStatus1)
        {
            <tr>
                <td class="url-cell" title="@link.Url">@link.Url</td>
                <td class="@(link.IsBroken ? "link-broken" : "link-ok")">@(link.IsBroken ? "Broken" : "OK")</td>
                <td>@link.StatusCode</td>
            </tr>
        }
    </tbody>
</table>
<table id="linkStatusTable2" class="table table-bordered table-striped">
    <thead>
        <tr>
            <th colspan="3">Links from @Model.Link2</th>
        </tr>
        <tr>
            <th>URL</th>
            <th>Status</th>
            <th>Code</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var link in Model.LinksStatus2)
        {
            <tr>
                 <td class="url-cell" title="@link.Url">@link.Url</td>
                <td class="@(link.IsBroken ? "link-broken" : "link-ok")">@(link.IsBroken ? "Broken" : "OK")</td>
                <td>@link.StatusCode</td>
            </tr>
        }
    </tbody>
</table>
<div style="clear: both;"></div>

<h2>Different Images</h2>


<div class="element-section mb-150">
    <div class="slider-item-wrapper">
        <div class="home-gallery-slider">
            @foreach (var img in Model.DifferentImages)
            {
                <div class="item">
                    <div class="gallery-polar-state">
                        <div class="img-holder pos-r">
                            <img src="data:image/jpeg;base64,@ConvertToBase64(img)" alt="Image" style="margin: 5px; border: 1px solid #ddd; padding: 5px; max-width: 200px;" />
                            <a href="data:image/jpeg;base64,@ConvertToBase64(img)" class="icon zoom fancybox" data-fancybox="images" data-caption="Difference">+</a>
                        </div> <!-- /.img-holder -->
                    </div> <!-- /.gallery-polar-state -->
                </div>
            }
        </div>
    </div> <!-- /.slider-item-wrapper -->
</div>



<div style="border: 1px solid #ccc; padding: 1em; background-color: #ffffff; overflow: auto; box-sizing: border-box; width: 100%; word-wrap: break-word;">
    <h2 style="margin-top: 0;">Content Differences</h2>
    <table id="content-differences" class="display" style="width:100%;">
        <thead>
            <tr>
                <th>Content Difference</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>
                    @Html.Raw(Model.HighlightedDifference)
                </td>
            </tr>
        </tbody>
    </table>
</div>

@section scripts {
    <script>
        $(document).ready(function () {
            $('#content-differences').DataTable();
        });
    </script>
}

<script src="~/owl-carousel/owl.carousel.min.js"></script>
<script src="https://code.jquery.com/jquery-3.5.1.js"></script>
<script src="https://cdn.datatables.net/1.11.4/js/jquery.dataTables.min.js"></script>
<script src="https://cdn.datatables.net/1.11.4/js/dataTables.bootstrap5.min.js"></script>
<script src="https://cdn.datatables.net/buttons/2.2.2/js/dataTables.buttons.min.js"></script>
<script src="https://cdn.datatables.net/buttons/2.2.2/js/buttons.bootstrap5.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js"></script>
<script src="https://cdn.datatables.net/buttons/2.2.2/js/buttons.html5.min.js"></script>
<script src="https://cdn.datatables.net/buttons/2.2.2/js/buttons.print.min.js"></script>
<script src="https://cdn.datatables.net/buttons/2.2.2/js/buttons.colVis.min.js"></script>

<script>
    $(document).ready(function () {
        var table1 = $('#linkStatusTable1').DataTable({
            dom: 'Bfrtip',
            buttons: [
                {
                    extend: 'copyHtml5',
                    titleAttr: 'Copy table data'
                },
                {
                    extend: 'excelHtml5',
                    titleAttr: 'Export to Excel'
                },
                {
                    extend: 'csvHtml5',
                    titleAttr: 'Export to CSV'
                },
                {
                    extend: 'pdfHtml5',
                    titleAttr: 'Export to PDF'
                },
                {
                    extend: 'print',
                    titleAttr: 'Print table'
                },
                {
                    extend: 'colvis',
                    titleAttr: 'Column visibility'
                },
                {
                    text: 'Export to Text',
                    action: function (e, dt, node, config) {
                        var data = table1.data().toArray();
                        var rows = data.map(row => row.join('\t')).join('\n');
                        var blob = new Blob([rows], { type: 'text/plain' });
                        var link = document.createElement('a');
                        link.href = window.URL.createObjectURL(blob);
                        link.download = 'data.txt';
                        link.click();
                    }
                }
            ]
        });

        var table2 = $('#linkStatusTable2').DataTable({
            dom: 'Bfrtip',
            buttons: [
                {
                    extend: 'copyHtml5',
                    titleAttr: 'Copy table data'
                },
                {
                    extend: 'excelHtml5',
                    titleAttr: 'Export to Excel'
                },
                {
                    extend: 'csvHtml5',
                    titleAttr: 'Export to CSV'
                },
                {
                    extend: 'pdfHtml5',
                    titleAttr: 'Export to PDF'
                },
                {
                    extend: 'print',
                    titleAttr: 'Print table'
                },
                {
                    extend: 'colvis',
                    titleAttr: 'Column visibility'
                },
                {
                    text: 'Export to Text',
                    action: function (e, dt, node, config) {
                        var data = table2.data().toArray();
                        var rows = data.map(row => row.join('\t')).join('\n');
                        var blob = new Blob([rows], { type: 'text/plain' });
                        var link = document.createElement('a');
                        link.href = window.URL.createObjectURL(blob);
                        link.download = 'data.txt';
                        link.click();
                    }
                }
            ]
        });
    });
</script>
